Given the head of a linked list and an integer val, remove all the nodes of the linked list that has Node.val == val, and return the new head.

Example 1:

Input: head = [1,2,6,3,4,5,6], val = 6
Output: [1,2,3,4,5]

Example 2:

Input: head = [], val = 1
Output: []

Example 3:

Input: head = [7,7,7,7], val = 7
Output: []

Code:
 ListNode* removeElements(ListNode* head, int val) {
        ListNode* temp = head;
        ListNode* prev = NULL;
        
        while(temp != NULL){
            if(temp->val == val){
                ListNode* temp2 = temp;
                temp = temp->next;
                if(temp2 != head)
                    prev->next = temp;
                else
                    head = temp;
                delete temp2;
            }
            else{
                prev = temp;
                temp = temp->next;
            }
        }
        
        return head;
}

tc = O(N)
sc = O(1)
