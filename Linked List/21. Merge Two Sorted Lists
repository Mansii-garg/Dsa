You are given the heads of two sorted linked lists list1 and list2.

Merge the two lists in a one sorted list. The list should be made by splicing together the nodes of the first two lists.

Return the head of the merged linked list.

Example 1:

Input: list1 = [1,2,4], list2 = [1,3,4]
Output: [1,1,2,3,4,4]

Example 2:

Input: list1 = [], list2 = []
Output: []

Example 3:

Input: list1 = [], list2 = [0]
Output: [0]

Code:
ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        if(list1 == NULL && list2 == NULL)
            return list1;
        
        if(list1 == NULL)
            return list2;
        
        if(list2 == NULL)
            return list1;
        
        ListNode* head = NULL;
        ListNode* tail = NULL;
        ListNode* h1 = list1;
        ListNode* h2 = list2;
        
        while(h1 != NULL && h2 != NULL){
            if(h1->val <= h2->val){
                if(head == NULL){
                    head = h1;
                }
                if(tail != NULL)
                    tail->next = h1;
                tail = h1;
                h1 = h1->next;
            }
            else{
                if(head == NULL){
                    head = h2;
                }
                if(tail != NULL)
                    tail->next = h2;
                tail = h2;
                h2 = h2->next;
            }
        }
        
        if(h1 == NULL){
            tail->next = h2;
        }
        if(h2 == NULL){
            tail->next = h1;
        }
        
        return head;
}

tc = O(N)
sc = O(1)
