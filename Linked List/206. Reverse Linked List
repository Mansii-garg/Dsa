Given the head of a singly linked list, reverse the list, and return the reversed list.

Example 1:

Input: head = [1,2,3,4,5]
Output: [5,4,3,2,1]

Example 2:

Input: head = [1,2]
Output: [2,1]

Example 3:

Input: head = []
Output: []

Code:
ListNode* reverseList(ListNode* head) {
        if(head == NULL || head->next == NULL){
            return head;
        }
        
        /*
        ListNode* smallAns = reverseList(head->next);
        
        ListNode* tail = head->next;
        tail->next = head;
        head->next = NULL;
        return smallAns;
        */
        
        ListNode* prev = NULL;
        ListNode* curr = head;
        ListNode* nxt = head->next;
        
        while(curr != NULL){
            curr->next = prev;
            prev = curr;
            curr = nxt;
            if(nxt != NULL)
                nxt = nxt-> next;
        }
        
        return prev;
}

tc = O(N)
sc = O(1)
