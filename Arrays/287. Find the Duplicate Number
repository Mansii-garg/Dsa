Given an array of integers nums containing n + 1 integers where each integer is in the range [1, n] inclusive.

There is only one repeated number in nums, return this repeated number.

You must solve the problem without modifying the array nums and uses only constant extra space.

Example 1:

Input: nums = [1,3,4,2,2]
Output: 2

Example 2:

Input: nums = [3,1,3,4,2]
Output: 3

Code:
    int findDuplicate(vector<int>& nums) {
        
        int n= nums.size();
        int dup;
        for(int i=0; i<n; i++){
            int index = abs(nums[i]);
            if(nums[index] < 0){
                dup = index;
            }
            else{
                nums[index] *= -1;
            }
        }
        
        for(int i=0; i<n; i++){
            if(nums[i] < 0){
                nums[i] *= -1;
            }
        }
        
        return dup;
    }
    
    tc = O(N)
    sc = O(1)
